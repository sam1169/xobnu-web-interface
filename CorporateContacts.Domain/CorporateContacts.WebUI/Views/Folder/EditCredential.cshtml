@model CorporateContacts.WebUI.Models.CredentialEditModel

@{
    ViewBag.Title = "Edit Credential";
    ViewBag.PageHeader = "Edit Credential";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Javascript {
    <script src="~/Scripts/jquery.showLoading.js"></script>
}


<script>
    $('.breadcrumb').html('<li><i class="icon-home home-icon"></i>@Html.ActionLink("Home","Index","Admin")</li><li><a href="/Folder/ManageFolders/">Manage Folders</a></li><li class="active">Edit Credential</li>');
</script>



<div class="row">
    <div class="col-sm-12">

        <div class="widget-box">
            <div class="widget-body">

                <div id="accordion" class="accordion-style1 panel-group">
                    <div class="panel panel-default">

                        <div class="panel-collapse in" id="collapseOne" style="height: auto;">
                            <div class="panel-body">
                                @using (Html.BeginForm("EditCredential", "Folder", FormMethod.Post, new { @class = "form-horizontal" }))
                                {      
                                    @Html.HiddenFor(x => x.ButtonStatus)
                                    @Html.HiddenFor(x => x.CredentialDetails.ID)
                                    <div class="form-group">
                                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Give a name</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(m => m.CredentialDetails.Name, new { @class = "col-xs-10 col-sm-5" })
                                        </div>
                                    </div>
                                    <div class="space-4"></div>
                                    <div class="form-group">
                                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Email</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(m => m.CredentialDetails.EmailAddress, new { @class = "col-xs-10 col-sm-5" })
                                             <div id="msgemail" style="color: red; padding-right:20px; "></div>
                                        </div>
                                    </div>
                                    <div class="space-4"></div>
                                    <div class="form-group">
                                        <label class="col-sm-3 control-label no-padding-right" for="form-field-2">Password</label>
                                        <div class="col-sm-9">@Html.TextBoxFor(m => m.CredentialDetails.Password, new { @class = "col-xs-10 col-sm-5", type="password" })@*<span class="help-inline col-xs-12 col-sm-7">*@
                                            @*<span class="middle">@Html.ValidationMessageFor(m => m.Password)</span></span>*@
                                        </div>
                                    </div>                                <div class="space-4"></div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label no-padding-right" for="form-field-2"></label>
                                    <div class="col-sm-9">
                                        <div style="color: green">
                                            @if (ViewBag.Message != null)
                                            { @ViewBag.Message }
                                        </div>
                                        <div style="color: red">
                                            @if (ViewBag.Message1 != null)
                                            { @ViewBag.Message1 }
                                        </div>
                                        <br/>
                                        <input type="submit" value="Auto Discover" id="btnAutoDiscover" disabled class="btn btn-info" onclick="$('#loading').addClass('inline', 1000);" style="height: 30px;line-height:10px;" />
                                        

                                    </div>
                                </div>
                                    <div class="space-4"></div>
                                    <div class="form-group">
                                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">URL</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(m => m.CredentialDetails.URL, new { @class = "col-xs-10 col-sm-5" , @Value = ViewBag.url}) &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                            
                                            <div style="color: green">
                                            @if (ViewBag.Message2 != null)
                                            { @ViewBag.Message2 }
                                        </div>
                                             <div id="msgurl" style="color: red;"></div>
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">ServerVersion</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(m => m.CredentialDetails.ServerVersion, new { @class = "col-xs-10 col-sm-5", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Is Hosted Exchange</label>
                                        <div class="col-sm-9">
                                            @Html.EditorFor(m => m.CredentialDetails.IsHostedExchange, new { @class = "col-xs-10 col-sm-5" })
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">Use Impersonation</label>
                                        <div class="col-sm-9">
                                            @Html.EditorFor(m => m.CredentialDetails.UseImpersonation, new { @class = "col-xs-10 col-sm-5" })
                                        </div>
                                    </div>
                                    
                                    
                                    <div class="col-md-offset-3 col-md-9">
                                        <input type="submit" value="Save" disabled class="btn btn-info" id="btnSave"  onclick="$('#loading').addClass('inline', 1000);">


                                        <input type="submit" value="Test Connection" id="btnTest" disabled class="btn btn-info" onclick="$('#loading').addClass('inline', 1000);" />
                                       
                                        &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  
                                <div id="loading" style="display: none;">Loading!&nbsp;&nbsp;<img src="~/Content/Images/ajax-loader.gif" alt="" /></div>
                                        <br /><br />
                                         

                                    </div>
                                    
                                   
									  
                                }
                            </div>
                        </div>
                    </div>




                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function validateEmail(sEmail) {

        var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        if (filter.test(sEmail)) {
            return true;
        }
        else {
            return false;
        }
    }

    $("#btnAutoDiscover").click(function (e) {
        $("#ButtonStatus").val('AutoDiscover');
    });

    $("#btnTest").click(function (e) {
        $("#ButtonStatus").val('TestConnection');
    });

    $("#btnSave").click(function (e) {
        $("#ButtonStatus").val('save');
    });

    $(document).ready(function () {

        var _emailadd = $("#CredentialDetails_EmailAddress").val();
        var _password = $("#CredentialDetails_Password").val();
        var _url = $("#CredentialDetails_URL").val();

        if ((_emailadd != '') && (_password != '') && (_url != '')) {
            $("#btnTest").prop('disabled', false);
            $("#btnAutoDiscover").prop('disabled', false);
            $("#btnSave").prop('disabled', false);
        }
        else {
            $("#btnTest").prop('disabled', true);
            $("#btnAutoDiscover").prop('disabled', true);
            $("#btnSave").prop('disabled', true);
        }
    });

    $("#CredentialDetails_Password, #CredentialDetails_EmailAddress, #CredentialDetails_URL").focusout(function () {
        var _emailadd = $("#CredentialDetails_EmailAddress").val();
        var _password = $("#CredentialDetails_Password").val();
        var _url = $("#CredentialDetails_URL").val();

        if ((_emailadd != '') && (_password != '') && (_url != '')) {
            $("#btnTest").prop('disabled', false);
        }
        else {
            $("#btnTest").prop('disabled', true);
            $("#btnSave").prop('disabled', true);
        }

        var txt = _url;
        var re = /(http(s)?:\\)?([\w-]+\.)+[\w-]+[.com|.in|.org]+(\[\?%&=]*)?/
        if (re.test(txt)) {
            $("#msgurl").text('');
        }
        else {

            if (_url != '') {
                $("#msgurl").text('invalid url');
            }
            $("#Credentials_URL").val('')

        }

    });


    $("#CredentialDetails_Password, #CredentialDetails_EmailAddress").focusout(function () {
        var _emailadd = $("#CredentialDetails_EmailAddress").val();
        var _password = $("#CredentialDetails_Password").val();
        var _url = $("#Credentials_URL").val();

        if ((_emailadd != '') && (_password != '')) {
            $("#btnAutoDiscover").prop('disabled', false);
        }
        else {
            $("#btnAutoDiscover").prop('disabled', true);
        }

        if (validateEmail(_emailadd)) {
            $("#msgemail").text('');

        }
        else {

            if (_emailadd != '') {
                $("#msgemail").text('invalid email');
            }
            $("#CredentialDetails_EmailAddress").val('')

            e.preventDefault();
        }

    });

</script>


